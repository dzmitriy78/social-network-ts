{"version":3,"file":"static/js/478.31b82c90.chunk.js","mappings":"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","sources":["webpack://react-kabzda-1/./src/components/Users/users.module.css?9211","components/hooks/usePagination.tsx","components/Users/User.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"userAvatar\":\"users_userAvatar__ouDUD\",\"btn\":\"users_btn__ABwlx\",\"page\":\"users_page__vrJIF\",\"selectedPage\":\"users_selectedPage__QKaNP\",\"follow\":\"users_follow__XF5za\",\"usersDescr\":\"users_usersDescr__aLFoW\",\"usersName\":\"users_usersName__QkRhs\",\"pagination\":\"users_pagination__VRIE4\",\"text\":\"users_text__6-a03\",\"disabled\":\"users_disabled__cD2Mw\"};","import {useState} from \"react\";\r\n\r\ninterface Type {\r\n    contentPerPage: number\r\n    count: number\r\n}\r\n\r\ninterface UsePagination {\r\n    ({contentPerPage, count}: Type): {\r\n        nextPage: () => void\r\n        firstContentIndex: number\r\n        totalPages: number\r\n        prevPage: () => void\r\n        lastContentIndex: number\r\n        page: number\r\n        setPage: (num: number) => void\r\n    }\r\n}\r\n\r\nconst usePagination: UsePagination = ({contentPerPage, count}: Type) => {\r\n    const [page, setPage] = useState<number>(1);\r\n    // number of pages in total (total items / content on each page)\r\n    const pageCount = Math.ceil(count / contentPerPage);\r\n    // index of last item of current page\r\n    const lastContentIndex = page * contentPerPage;\r\n    // index of first item of current page\r\n    const firstContentIndex = lastContentIndex - contentPerPage;\r\n\r\n    // change page based on direction either front or back\r\n    const changePage = (direction: boolean) => {\r\n        setPage((state) => {\r\n            // move forward\r\n            if (direction) {\r\n                // if page is the last page, do nothing\r\n                if (state === pageCount) {\r\n                    return state;\r\n                }\r\n                return state + 1;\r\n                // go back\r\n            } else {\r\n                // if page is the first page, do nothing\r\n                if (state === 1) {\r\n                    return state;\r\n                }\r\n                return state - 1;\r\n            }\r\n        });\r\n    };\r\n\r\n    const setPageSAFE = (num: number) => {\r\n        // if number is greater than number of pages, set to last page\r\n        if (num > pageCount) {\r\n            setPage(pageCount);\r\n            // if number is less than 1, set page to first page\r\n        } else if (num < 1) {\r\n            setPage(1);\r\n        } else {\r\n            setPage(num);\r\n        }\r\n    };\r\n\r\n    return {\r\n        totalPages: pageCount,\r\n        nextPage: () => changePage(true),\r\n        prevPage: () => changePage(false),\r\n        setPage: setPageSAFE,\r\n        firstContentIndex,\r\n        lastContentIndex,\r\n        page,\r\n    };\r\n};\r\n\r\nexport default usePagination;","import React from \"react\";\r\nimport styles from \"./users.module.css\"\r\nimport userPhoto from \"./../../assets/images/user.png\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {UsersType} from \"./Users\";\r\n\r\nexport type UserPropsType = {\r\n    user: UsersType\r\n    isAuth: boolean\r\n    following: (userId: number) => void\r\n    followingInProgress: Array<number>\r\n    unfollowing: (userId: number) => void\r\n}\r\n\r\nexport const User: React.FC<UserPropsType> = ({user, isAuth, following, followingInProgress, unfollowing}) => {\r\n\r\n    return <div>\r\n               <span>\r\n                   <div>\r\n                       <NavLink to={\"/profile/\" + user.id}>\r\n                       <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                            className={styles.userAvatar}\r\n                            alt={\"ava\"}/>\r\n                       </NavLink>\r\n                   </div>\r\n                   <div className={styles.follow}>\r\n                       {user.followed ?\r\n                           <button className={styles.btn}\r\n                                   disabled={!isAuth || followingInProgress.some((id: number) => id === user.id)}\r\n                                   onClick={() => {\r\n                                       unfollowing(user.id)\r\n                                   }}>Unfollow</button>\r\n                           : <button className={styles.btn}\r\n                                     disabled={!isAuth || followingInProgress.some((id: number) => id === user.id)}\r\n                                     onClick={() => {\r\n                                         following(user.id)\r\n                                     }}>Follow</button>}\r\n                   </div>\r\n               </span>\r\n                            <span>\r\n                                <div className={styles.usersName}>{user.name}</div>\r\n                                <div className={styles.usersDescr}>{user.status}</div>\r\n                            </span>\r\n                            <span>\r\n                                <div className={styles.usersDescr}>{\"user.location.city\"}</div>\r\n                                <div className={styles.usersDescr}>{\"user.location.country\"}</div>\r\n                            </span>\r\n    </div>\r\n}","import React from \"react\";\r\nimport styles from \"./users.module.css\"\r\nimport usePagination from \"../hooks/usePagination\";\r\nimport {User} from \"./User\";\r\n\r\nexport type UsersType = {\r\n    id: number\r\n    photos: { small: string; large: string }\r\n    followed: boolean\r\n    name: string\r\n    status: string\r\n}\r\n\r\nexport type UsersPropsType = {\r\n    users: Array<UsersType>\r\n    unfollowing: (userId: number) => void\r\n    following: (userId: number) => void\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    onPageChanged: (pages: number) => void\r\n    followingInProgress: Array<number>\r\n    isAuth: boolean\r\n}\r\n\r\nexport let Users: React.FC<UsersPropsType> = (props) => {\r\n    const {\r\n        firstContentIndex,\r\n        lastContentIndex,\r\n        nextPage,\r\n        prevPage,\r\n        page,\r\n        setPage,\r\n        totalPages,\r\n    } = usePagination({\r\n        contentPerPage: 10,\r\n        count: props.totalUsersCount,\r\n    });\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    const goPage = () => {\r\n        let num: any = prompt(\"Переход на страницу...\")\r\n        setPage(Math.ceil(num / 10))\r\n        props.onPageChanged(num)\r\n    }\r\n    return (<div>\r\n        <div>\r\n\r\n            {(\r\n                <div className={styles.pagination}>\r\n\r\n                    <button\r\n                        onClick={prevPage}\r\n                        className={page === 1 ? styles.disabled : styles.page}\r\n                    >\r\n                        &larr;\r\n                    </button>\r\n\r\n                    {pages\r\n                        .slice(firstContentIndex, lastContentIndex)\r\n                        .map((p, i) => {\r\n                            return <span key={i} onClick={() => {\r\n                                props.onPageChanged(p)\r\n                            }} className={props.currentPage === p ? styles.selectedPage : styles.page}>{p}</span>\r\n                        })}\r\n\r\n                    <button\r\n                        onClick={nextPage}\r\n                        className={page === totalPages ? styles.page && styles.disabled : styles.page}\r\n                    >\r\n                        &rarr;\r\n                    </button>\r\n                    <button className={styles.btn} onClick={goPage}>\r\n                        Go to\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </div>\r\n        {\r\n            props.users.map((u, i) =>\r\n                <User key={i}\r\n                      user={u}\r\n                      isAuth={props.isAuth}\r\n                      following={props.following}\r\n                      followingInProgress={props.followingInProgress}\r\n                      unfollowing={props.unfollowing}\r\n                />)\r\n        }\r\n\r\n\r\n    </div>)\r\n}\r\n","import {connect} from \"react-redux\";\r\nimport {following, getUsers, setCurrentPage, unfollowing} from \"../../redux/users-reducer\";\r\nimport {Users, UsersType} from \"./Users\";\r\nimport React from \"react\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\n\r\nexport type UsersContainerPropsType = {\r\n    currentPage: number\r\n    setCurrentPage(numberPage: number): void\r\n    users: Array<UsersType>\r\n    unfollowing: (userId: number) => void\r\n    following: (userId: number) => void\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n    getUsers(currentPage: number, pageSize: number): void\r\n    isAuth: boolean\r\n}\r\n\r\nclass UsersContainer extends React.Component<UsersContainerPropsType, UsersType> {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props\r\n        this.props.getUsers(currentPage, pageSize)\r\n    }\r\n\r\n    onPageChanged = (numberPage: number) => {\r\n        const {pageSize} = this.props\r\n        this.props.getUsers(numberPage, pageSize)\r\n        this.props.setCurrentPage(numberPage)\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                users={this.props.users}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                following={this.props.following}\r\n                unfollowing={this.props.unfollowing}\r\n                pageSize={this.props.pageSize}\r\n                followingInProgress={this.props.followingInProgress}\r\n                isAuth={this.props.isAuth}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    /* withAuthRedirect,*/\r\n    connect(mapStateToProps, {\r\n        following, unfollowing, setCurrentPage, getUsers\r\n    }))\r\n(UsersContainer)"],"names":["contentPerPage","count","useState","page","setPage","pageCount","Math","ceil","lastContentIndex","changePage","direction","state","totalPages","nextPage","prevPage","num","firstContentIndex","User","user","isAuth","following","followingInProgress","unfollowing","to","id","src","photos","small","userPhoto","className","styles","alt","followed","disabled","some","onClick","name","status","Users","props","usePagination","totalUsersCount","pagesCount","pageSize","pages","i","push","slice","map","p","onPageChanged","currentPage","prompt","users","u","UsersContainer","numberPage","getUsers","setCurrentPage","this","isFetching","Preloader","React","compose","connect","usersPage","auth"],"sourceRoot":""}