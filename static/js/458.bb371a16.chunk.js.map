{"version":3,"file":"static/js/458.bb371a16.chunk.js","mappings":"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","sources":["webpack://react-kabzda-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","webpack://react-kabzda-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-kabzda-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","webpack://react-kabzda-1/./src/components/form/PostForm.module.css?e7ad","components/form/PostForm.tsx","components/form/formValidation/loginFormSchema.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profileInfo\":\"ProfileInfo_profileInfo__mTenO\",\"description\":\"ProfileInfo_description__EVTGP\"};","import React, {ChangeEvent, useEffect, useState} from 'react';\r\n\r\ninterface ProfileStatusPropsType {\r\n    status: string\r\n    updateStatus(status: string): void\r\n}\r\n\r\nconst ProfileStatus: React.FC<ProfileStatusPropsType> = ({updateStatus, status}) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const [newStatus, setNewStatus] = useState<string>(status)\r\n\r\n    useEffect(() => {\r\n        if (status) {\r\n            setNewStatus(status)\r\n        } else {\r\n            setNewStatus(\"\")\r\n        }\r\n    }, [status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        updateStatus(newStatus)\r\n    }\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNewStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode\r\n                ? <div>\r\n                    <span onDoubleClick={activateEditMode}>{status || \"no Status\"}</span>\r\n                </div>\r\n                : <div>\r\n                    <input\r\n                        onChange={onStatusChange}\r\n                        autoFocus={true}\r\n                        onBlur={deactivateEditMode}\r\n                        value={newStatus}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileStatus;","import React from \"react\";\r\nimport classes from \"./ProfileInfo.module.css\"\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport {ProfileType} from \"../ProfileContainer\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport rootImg from \"./../../../assets/images/rootImg.jpg\"\r\n\r\ntype ProfileInfoType = {\r\n    profile: ProfileType\r\n    status: string\r\n    updateStatus(status: string): void\r\n}\r\nexport const ProfileInfo: React.FC<ProfileInfoType> = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return (\r\n            <Preloader/>\r\n        )\r\n    }\r\n    return (\r\n        <div className={classes.profileInfo}>\r\n            <div>\r\n                <img src={rootImg} alt={\"rootImg\"}/>\r\n            </div>\r\n            <div className={classes.description}>\r\n                <img\r\n                    src={profile.photos.small} alt={\"photos\"}/>\r\n                <ProfileStatus status={status}\r\n                               updateStatus={updateStatus}\r\n                />\r\n                <div>\r\n                    <h4>{`Имя: ${profile.fullName}`}</h4>\r\n                </div>\r\n                <div>\r\n                    {`Обо мне: ${profile.aboutMe}`}\r\n                </div>\r\n                <div>\r\n                    {`Контакты: ${profile.contacts.vk}`}\r\n                </div>\r\n                <div>\r\n                    {`В поиске работы? ${profile.lookingForAJobDescription}`}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__Bk92l\",\"posts\":\"MyPosts_posts__1pgcs\",\"btn\":\"MyPosts_btn__f4jRE\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__T4s02\",\"btn\":\"Post_btn__2Dw85\"};","import React from \"react\";\r\nimport classes from \"./Post.module.css\";\r\n\r\nexport type PostType = {\r\n    id: number\r\n    message: string\r\n    likes: number\r\n    deletePost(postId: number): void\r\n}\r\n\r\nexport const Post: React.FC<PostType> = ({deletePost, id, message, likes}) => {\r\n\r\n    let removePost = () => {\r\n        deletePost(id)\r\n    }\r\n    return (\r\n        <div className={classes.item}>\r\n            <img src={\"https://shapka-youtube.ru/wp-content/uploads/2021/02/avatarka-dlya-skaypa-dlya-parney.jpg\"}\r\n                 alt={\"\"}/>\r\n            {message}\r\n\r\n            <button className={classes.btn} onClick={removePost}>x</button>\r\n            <div>\r\n                <span>Likes:</span>\r\n                {likes}\r\n            </div>\r\n            <hr/>\r\n        </div>\r\n    )\r\n}","import {addPost, deletePost} from \"../../../redux/profile-reducer\";\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/store\";\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        postData: state.profilePage.postData,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nexport const MyPostsContainer = connect(mapStateToProps, {addPost, deletePost})(MyPosts)","import React from \"react\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport {Post} from \"./Post/Post\";\r\nimport PostForm, {FormikValues} from \"../../form/PostForm\";\r\n\r\nexport type PostDataType = {\r\n    id: number\r\n    message: string\r\n    likeCount: number\r\n}\r\ntype MyPostsType = {\r\n    postData: Array<PostDataType>\r\n    addPost(text: string): void\r\n    deletePost(postId: number): void\r\n    isAuth: boolean\r\n}\r\n\r\nexport const MyPosts: React.FC<MyPostsType> = ({postData, addPost, deletePost, isAuth}) => {\r\n\r\n    const deleteMyPost=(id: number)=>{\r\n        deletePost(id)\r\n    }\r\n\r\n    let postElement = postData\r\n        .map((p: PostDataType, i: number) =>\r\n            <Post key={i} id={p.id}\r\n                  message={p.message}\r\n                  deletePost={deleteMyPost}\r\n                  likes={p.likeCount}/>)\r\n\r\n\r\n    let addMyPost = (values: FormikValues) => {\r\n        addPost(values.text)\r\n    }\r\n    return isAuth ? (\r\n        <div className={classes.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <PostForm callback={addMyPost}/>\r\n                <div className={classes.posts}>\r\n                    {postElement}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ) : <div></div>;\r\n}\r\n","import React from \"react\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfileType} from \"./ProfileContainer\";\r\nimport no_profile_img from \"./../../assets/images/noPofile.jpg\"\r\n\r\ninterface ProfileProps {\r\n    profile: ProfileType\r\n    status: string\r\n    updateStatus(status: string): void\r\n}\r\n\r\nexport const Profile: React.FC<ProfileProps> = ({profile, updateStatus, status}) => {\r\n    if (!profile) {\r\n        return <div>\r\n            <img src={no_profile_img} alt={\"noProfileImg\"}/>\r\n        </div>\r\n    }\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={profile}\r\n                         status={status}\r\n                         updateStatus={updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Profile} from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getStatus, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {Params, PathMatch, useMatch} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\n\r\nexport type ProfileType = {\r\n    aboutMe: string\r\n    contacts: {\r\n        facebook: string\r\n        github: string\r\n        instagram: string\r\n        mainLink: string\r\n        twitter: string\r\n        vk: string\r\n        website: string\r\n        youtube: string\r\n    }\r\n    fullName: string\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    photos: { small: string, large: string }\r\n    userId: number\r\n}\r\nexport type ProfileContainerPropsType = {\r\n    profile: ProfileType\r\n    match?: PathMatch | null\r\n    params?: Params\r\n    getProfile(userId: number): void\r\n    getStatus(userId: number): void\r\n    status: string\r\n    updateStatus(status: string): void\r\n    meId: number\r\n    userId: number\r\n}\r\n\r\nexport const ProfileURLMatch = (Component: any) => {\r\n    let RouterComponent: (props: ProfileContainerPropsType) => JSX.Element;\r\n    RouterComponent = (props: ProfileContainerPropsType) => {\r\n        const match = useMatch('/profile/:userId/');\r\n        return <Component {...props} match={match}/>;\r\n    };\r\n    return RouterComponent\r\n}\r\n\r\nclass ProfileContainer extends React.Component<ProfileContainerPropsType, ProfileType> {\r\n    componentDidMount() {\r\n        let userId = this.props.match\r\n            ? this.props.match.params.userId\r\n            : this.props.meId;\r\n        if (userId) {\r\n            this.props.getProfile(userId as number)\r\n            this.props.getStatus(userId as number)\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state: AppStateType) {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        meId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus}),\r\n    ProfileURLMatch,\r\n    /* withAuthRedirect*/)\r\n(ProfileContainer)","// extracted by mini-css-extract-plugin\nexport default {\"errorMessage\":\"PostForm_errorMessage__0Y8By\"};","import React from 'react';\r\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport classes from \"./PostForm.module.css\"\r\nimport {postFormSchema} from \"./formValidation/loginFormSchema\";\r\n\r\n\r\nexport interface FormikValues {\r\n    text: string\r\n}\r\n\r\ninterface Errors {\r\n    text?: string\r\n}\r\n\r\ninterface PostFormProps {\r\n    callback: (values: FormikValues) => void\r\n}\r\n\r\nconst PostForm = (props: PostFormProps) => {\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{text: \"\"}}\r\n                validate={values => {\r\n                    const errors: Errors = {};\r\n                    if (!values.text) {\r\n                        errors.text = 'Enter your message'\r\n                    }\r\n                    return errors;\r\n                }}\r\n                onSubmit={(values, actions) => {\r\n                    props.callback(values)\r\n                    actions.resetForm({values: {text: \"\"}})\r\n                }}\r\n                validationSchema={postFormSchema}\r\n            >\r\n                {() => (\r\n                    <Form>\r\n                        <div>`\r\n                            <Field component={'textarea'}\r\n                                   name={'text'}\r\n                                   placeholder={'write a message'}/>\r\n                        </div>\r\n                        <div className={classes.errorMessage}>\r\n                            <ErrorMessage name=\"text\" component=\"div\"/>\r\n                        </div>\r\n                        <button style={{cursor:\"pointer\"}} type={'submit'}>Add post</button>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostForm;","import * as Yup from \"yup\";\r\n\r\nexport const loginFormSchema = Yup.object().shape({\r\n    password: Yup.string()\r\n        .min(4, \"Must be longer than 8 characters\")\r\n        .required(\"Required\")\r\n});\r\n\r\nexport const postFormSchema = Yup.object().shape({\r\n    text: Yup.string()\r\n        .min(2, \"Must be longer than 2 characters!\")\r\n        .max(50, \"Post length no more than 50 characters!\")\r\n        .required(\"Required\")\r\n})"],"names":["updateStatus","status","useState","editMode","setEditMode","newStatus","setNewStatus","useEffect","onChange","e","currentTarget","value","autoFocus","onBlur","onDoubleClick","ProfileInfo","profile","className","classes","src","rootImg","alt","photos","small","fullName","aboutMe","contacts","vk","lookingForAJobDescription","Preloader","Post","deletePost","id","message","likes","onClick","MyPostsContainer","connect","state","postData","profilePage","isAuth","auth","addPost","deleteMyPost","postElement","map","p","i","likeCount","PostForm","callback","values","text","Profile","no_profile_img","ProfileURLMatch","Component","props","match","useMatch","ProfileContainer","userId","this","params","meId","getProfile","getStatus","React","compose","initialValues","validate","errors","onSubmit","actions","resetForm","validationSchema","postFormSchema","component","name","placeholder","style","cursor","type","loginFormSchema","Yup","shape","password","min","required","max"],"sourceRoot":""}