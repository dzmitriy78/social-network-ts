{"version":3,"file":"static/js/432.cec3e4e1.chunk.js","mappings":"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","sources":["webpack://react-kabzda-1/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/Dialog/Dialog.tsx","components/Dialogs/Messages/Messages.tsx","hoc/withAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","components/Dialogs/Dialogs.tsx","webpack://react-kabzda-1/./src/components/form/PostForm.module.css?e7ad","components/form/PostForm.tsx","components/form/formValidation/loginFormSchema.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__nC8xB\",\"active\":\"Dialogs_active__y8GKL\",\"dialog\":\"Dialogs_dialog__P1Yv4\",\"messages\":\"Dialogs_messages__LuKhF\",\"dialogsItems\":\"Dialogs_dialogsItems__XJVrZ\"};","import React from \"react\";\r\nimport classes from \"./../Dialogs.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport type DialogType = {\r\n    id: number\r\n    name: string\r\n    avatar: string\r\n}\r\n\r\nexport const Dialog: React.FC<DialogType> = ({avatar, id, name}) => {\r\n    let path = `/dialogs/${id}`;\r\n    return (\r\n        <div className={classes.dialog}>\r\n            <img src={avatar} alt={\"\"}/>\r\n            <NavLink className={(DialogsData) => DialogsData.isActive ? classes.active : \"\"}\r\n                     to={path}>{name}</NavLink>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport classes from \"./../Dialogs.module.css\"\r\nimport {MessageDataType} from \"../../../redux/message-reducer\";\r\n\r\nexport const Message: React.FC<MessageDataType> = ({message}) => {\r\n    return (\r\n        <div className={classes.message}>{message}</div>\r\n    )\r\n}\r\n","import React, {ComponentType} from 'react';\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\ntype MPSType = {\r\n    isAuth: boolean\r\n}\r\n\r\ninterface MapStateToPropsForRedirectParams {\r\n    auth: { isAuth: boolean }\r\n}\r\n\r\nlet mapStateToPropsForRedirect = (state: MapStateToPropsForRedirectParams): MPSType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function withAuthRedirect <T>(Component: ComponentType<T>) {\r\n    return connect(mapStateToPropsForRedirect)((props: MPSType) => {\r\n        let {isAuth, ...restProps} = props\r\n        if (!isAuth)\r\n            return <Navigate replace to=\"/login\"/>\r\n        return <Component {...restProps as T}/>\r\n    })\r\n}","import {addDialog, DialogsDataType, MessageDataType} from \"../../redux/message-reducer\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport React from \"react\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {AppStateType} from \"../../redux/store\";\r\n\r\nexport type MessagePageType = {\r\n    dialogsData: Array<DialogsDataType>\r\n    messageData: Array<MessageDataType>\r\n}\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        messagePage: state.messagePage\r\n    }\r\n}\r\n\r\nconst DialogsContainer = compose<React.ComponentType>(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {addDialog}))\r\n(Dialogs)\r\nexport default DialogsContainer","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import React from \"react\";\r\nimport classes from \"./Dialogs.module.css\"\r\nimport {Dialog} from \"./Dialog/Dialog\";\r\nimport PostForm, {FormikValues} from \"../form/PostForm\";\r\nimport {MessagePageType} from \"./DialogsContainer\";\r\nimport {Message} from \"./Messages/Messages\";\r\n\r\nexport type DialogsType = {\r\n    messagePage: MessagePageType\r\n    addDialog(dialogText: string): void\r\n}\r\n\r\nexport const Dialogs: React.FC<DialogsType> = ({addDialog, messagePage}) => {\r\n\r\n    let dialogsElement = messagePage.dialogsData\r\n        .map((d, i) => <Dialog key={i} avatar={d.avatar} name={d.name} id={d.id}/>);\r\n\r\n    let messageElement = messagePage.messageData\r\n        .map((m, i) => <Message key={i} id={m.id} message={m.message}/>);\r\n\r\n\r\n    let addNewDialog = (values: FormikValues) => {\r\n        addDialog(values.text);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItems}>\r\n                {dialogsElement}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                {messageElement}\r\n                <PostForm callback={addNewDialog}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"errorMessage\":\"PostForm_errorMessage__0Y8By\"};","import React from 'react';\r\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport classes from \"./PostForm.module.css\"\r\nimport {postFormSchema} from \"./formValidation/loginFormSchema\";\r\n\r\n\r\nexport interface FormikValues {\r\n    text: string\r\n}\r\n\r\ninterface Errors {\r\n    text?: string\r\n}\r\n\r\ninterface PostFormProps {\r\n    callback: (values: FormikValues) => void\r\n}\r\n\r\nconst PostForm = (props: PostFormProps) => {\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{text: \"\"}}\r\n                validate={values => {\r\n                    const errors: Errors = {};\r\n                    if (!values.text) {\r\n                        errors.text = 'Enter your message'\r\n                    }\r\n                    return errors;\r\n                }}\r\n                onSubmit={(values, actions) => {\r\n                    props.callback(values)\r\n                    actions.resetForm({values: {text: \"\"}})\r\n                }}\r\n                validationSchema={postFormSchema}\r\n            >\r\n                {() => (\r\n                    <Form>\r\n                        <div>`\r\n                            <Field component={'textarea'}\r\n                                   name={'text'}\r\n                                   placeholder={'write a message'}/>\r\n                        </div>\r\n                        <div className={classes.errorMessage}>\r\n                            <ErrorMessage name=\"text\" component=\"div\"/>\r\n                        </div>\r\n                        <button style={{cursor:\"pointer\"}} type={'submit'}>Add post</button>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostForm;","import * as Yup from \"yup\";\r\n\r\nexport const loginFormSchema = Yup.object().shape({\r\n    password: Yup.string()\r\n        .min(4, \"Must be longer than 8 characters\")\r\n        .required(\"Required\")\r\n});\r\n\r\nexport const postFormSchema = Yup.object().shape({\r\n    text: Yup.string()\r\n        .min(2, \"Must be longer than 2 characters!\")\r\n        .max(50, \"Post length no more than 50 characters!\")\r\n        .required(\"Required\")\r\n})"],"names":["Dialog","avatar","id","name","path","className","classes","src","alt","DialogsData","isActive","to","Message","message","mapStateToPropsForRedirect","state","isAuth","auth","compose","Component","connect","props","restProps","source","excluded","key","i","target","objectWithoutPropertiesLoose","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","replace","messagePage","addDialog","dialogsElement","dialogsData","map","d","messageElement","messageData","m","PostForm","callback","values","text","initialValues","validate","errors","onSubmit","actions","resetForm","validationSchema","postFormSchema","component","placeholder","style","cursor","type","loginFormSchema","Yup","shape","password","min","required","max"],"sourceRoot":""}